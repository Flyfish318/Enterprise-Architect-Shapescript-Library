shape main
{
	layouttype="leftright";
	fixedAspectRatio="true";
	
	defsize(200,40);
	
	AddSubShape("funnel",20,100);
	
	if (hastag("Condition"))
	{
		if (hastag("ConditionType", "MeasureBased"))
		{
			AddSubShape("clock",8,30,3,3);
			AddSubShape("condition",71,25,5,0);
		}
		else
		{
			if (hastag("ConditionType", "Complex"))
			{
				AddSubShape("complex",8,30,3,3);
				AddSubShape("condition",71,25,5,0);
			}
			else
			{
				AddSubShape("questionBox",8,30,3,3);
				AddSubShape("condition",71,25,5,0);
			}
		}
		if (hastag("Time Limit"))
		{
			AddSubShape("brackets",8,30,-76,60);
			AddSubShape("limit",67,25,-73,55);
		}
		else
		{
			if (hastag("Quantitative Limit"))
			{
				AddSubShape("brackets",8,30,-76,60);
				AddSubShape("limit",67,25,-73,55);
			}
		}
	}
	else
	{
		if (hastag("Time Limit"))
		{
			AddSubShape("brackets",8,30,3,3);
			AddSubShape("limit",71,25,5,0);
		}
		else
		{
			if (hastag("Quantitative Limit"))
			{
				AddSubShape("brackets",8,30,3,3);
				AddSubShape("limit",71,25,5,0);
			}
		}
	}

	shape condition
	{
		print("#TAG:Condition#");
	}
	shape complex
	{
		SetPenWidth(1);
		//boxes
		//topleft
		RoundRect(0,0,48,48,5,5);
		//topright
		RoundRect(52,0,100,48,5,5);
		//bottomleft
		RoundRect(0,52,48,100,5,5);
		//bottomright
		RoundRect(52,52,100,100,5,5);
		//plus
		setfillcolor(0,0,0);
		Rectangle(23,12,25,36);
		Rectangle(12,23,36,25);
		//minus
		Rectangle(66,23,86,25);
		//multiply
		//topleft to bottomright
		StartPath();
		moveto(11,66);
		lineto(13,64);
		lineto(36,85);
		lineto(34,87);
		lineto(11,66);
		EndPath();
		FillAndStrokePath();
		//topright to bottomleft
		StartPath();
		moveto(37,66);
		lineto(35,64);
		lineto(12,85);
		lineto(14,87);
		lineto(37,66);
		EndPath();
		FillAndStrokePath();
		//divide
		//minus
		Rectangle(64,75,88,77);
		Ellipse(74,64,78,68);
		Ellipse(74,84,78,88);
	}
	shape questionBox
	{
		//big rectangle
		SetPenWidth(1);
		Rectangle(0,0,100,100);
		
		//question mark top
		SetPenWidth(1);
		Arc(33,23,62,50,49,49,38,29);
		moveto(48,49);
		lineto(48,57);
		SetFillColor(0,0,0);
		Ellipse(46,67,51,73);
	}
	shape brackets
	{
		SetPenWidth(2);
		//left [
		moveto(20,0);
		lineto(0,0);
		lineto(0,100);
		lineto(20,100);
		
		//right ]
		moveto(80,0);
		lineto(100,0);
		lineto(100,100);
		lineto(80,100);
		
		//midde |||
		moveto(27,30);
		lineto(27,70);
		moveto(50,30);
		lineto(50,70);
		moveto(78,30);
		lineto(78,70);
		
	}
	shape limit
	{
		if (hastag("Time Limit"))
		{
			print("#TAG:Time Limit#");
			if (hastag("Quantitative Limit"))
			{
				print(" / #TAG:Quantitative Limit#");
			}
		} 
		else
		{
			print("#TAG:Quantitative Limit#");
		}
	}

		
	shape clock	
	{
		SetPenWidth(2);
		ellipse	(0,0,100,100);
		SetPenWidth(1);
		//12
		MoveTo(50,0);
		LineTo(50,13);
		//1
		MoveTo(74,7);
		LineTo(67,19);
		//2
		MoveTo(93,24);
		LineTo(80,32);
		//3
		MoveTo(100,50);
		LineTo(87,50);	
		//4
		MoveTo(94,74);
		LineTo(82,67);	
		//5
		MoveTo(77,92);
		LineTo(68,80);	
		//6
		MoveTo(50,100);
		LineTo(50,87);	
		//7
		MoveTo(24,93);
		LineTo(34,79);		
		//8
		MoveTo(6,74);
		LineTo(20,65);	
		//9
		MoveTo(0,50);
		LineTo(13,50);	
		//10
		MoveTo(7,24);
		LineTo(21,34);	
		//11
		MoveTo(24,7);
		LineTo(34,21);	
		//middle circle
		StartPath();
		ellipse	(44,44,56,56);
		EndPath();
		SetFillColor(0,0,0);
		FillAndStrokePath();
		//hand
		SetPenWidth(2);
		MoveTo(42,56);
		LineTo(76,22);
	}
	shape funnel
	{
		SetPenWidth(3);
		StartPath();
		moveTo(0,0);
		lineto(100,0);
		lineto(60,50);
		lineto(60,100);
		lineto(40,100);
		lineto(40,50);
		lineto(0,0);
		EndPath();
		FillAndStrokePath();
	}
}
//definition of a label
shape label
{
 setOrigin("SW",0,0); 
 println("#NAME#"); 
}







